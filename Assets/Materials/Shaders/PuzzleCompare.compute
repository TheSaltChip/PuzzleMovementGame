// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWBuffer<int> Result;
RWStructuredBuffer<float4> image;

RWStructuredBuffer<int> quads;
RWStructuredBuffer<int> rearrangedQuads;

uint height;
uint width;

[numthreads(64,1,1)]
void CSMain (uint id : SV_DispatchThreadID)
{
    int r = rearrangedQuads[id.x];
    int q = quads[id.x];
    if (length(image[r]) == length(image[q]))// && length(image[rearrangedQuads[id.x]]) >= length(image[quads[id.x]]))
    {
        Result[id.x] = r;
    }else{
        Result[id.x] = 0;
    }
}
